// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "Crea un usuario en el sistema utilizando la informaci贸n proporcionada.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "usuario"
                ],
                "summary": "Crear un nuevo usuario",
                "parameters": [
                    {
                        "description": "Informaci贸n del usuario a crear",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario creado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/register-purchase": {
            "post": {
                "description": "Registra una nueva compra en el sistema utilizando la informaci贸n proporcionada.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pruchase"
                ],
                "summary": "Registrar una nueva compra",
                "parameters": [
                    {
                        "description": "Informaci贸n de la compra a registrada",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterPurchaseReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Compra registrada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/domain.Purchase"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Purchase": {
            "type": "object",
            "required": [
                "amount",
                "branch_id",
                "campaign_id",
                "commerce_id",
                "user_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "branch_id": {
                    "type": "integer"
                },
                "campaign_id": {
                    "type": "integer"
                },
                "commerce_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "earned_cashBack": {
                    "type": "integer"
                },
                "earned_points": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "cashback": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserReq": {
            "type": "object",
            "required": [
                "email",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterPurchaseReq": {
            "type": "object",
            "required": [
                "amount",
                "branch_id",
                "campaign_id",
                "commerce_id",
                "user_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "branch_id": {
                    "type": "integer"
                },
                "campaign_id": {
                    "type": "integer"
                },
                "commerce_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
