definitions:
  domain.Award:
    properties:
      campaignID:
        type: integer
      commerceID:
        type: integer
      description:
        type: string
      id:
        type: integer
      pointsCost:
        type: integer
      value:
        type: number
    type: object
  domain.Branch:
    properties:
      address:
        type: string
      commerceID:
        type: integer
      createdAt:
        type: string
      endDate:
        type: string
      id:
        type: integer
      name:
        type: string
      startDate:
        type: string
      updatedAt:
        type: string
    type: object
  domain.Campaign:
    properties:
      award:
        items:
          $ref: '#/definitions/domain.Award'
        type: array
      bonusFactor:
        type: number
      bonusType:
        type: string
      branchID:
        type: integer
      commerceID:
        type: integer
      createdAt:
        type: string
      endDate:
        type: string
      id:
        type: integer
      isForAll:
        type: boolean
      minPurchase:
        type: number
      name:
        type: string
      startDate:
        type: string
      updatedAt:
        type: string
    type: object
  domain.Commerce:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  domain.Purchase:
    properties:
      amount:
        type: number
      branchID:
        type: integer
      campaignID:
        type: integer
      commerceID:
        type: integer
      createdAt:
        type: string
      earnedCashBack:
        type: integer
      earnedPoints:
        type: integer
      id:
        type: integer
      redeemPoints:
        type: boolean
      userID:
        type: integer
    type: object
  domain.Redeem:
    properties:
      awardID:
        type: integer
      branchID:
        type: integer
      campaignID:
        type: integer
      cashBack:
        type: integer
      commerceID:
        type: integer
      isPointsRedeem:
        type: boolean
      purchaseID:
        type: integer
      redeemedAwardID:
        type: integer
      redeemedCashBack:
        type: number
      redeemedPoints:
        type: integer
      userID:
        type: integer
    type: object
  domain.User:
    properties:
      cashback:
        type: integer
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      points:
        type: integer
      updatedAt:
        type: string
    type: object
  dto.CreateAwardsCampaign:
    properties:
      campaignID:
        type: integer
      commerce_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      points_cost:
        type: integer
      value:
        type: number
    type: object
  dto.CreateBranchDTO:
    properties:
      active_date:
        type: string
      address:
        type: string
      commerce_id:
        type: integer
      name:
        type: string
    required:
    - active_date
    - address
    - commerce_id
    - name
    type: object
  dto.CreateCampaignDTO:
    properties:
      awards:
        items:
          $ref: '#/definitions/dto.CreateAwardsCampaign'
        type: array
      bonus_factor:
        type: number
      bonus_type:
        enum:
        - double
        - percentage
        type: string
      branch_id:
        type: integer
      commerce_id:
        type: integer
      end_date:
        type: string
      is_for_all:
        type: boolean
      min_purchase:
        type: number
      name:
        type: string
      start_date:
        type: string
    required:
    - bonus_factor
    - bonus_type
    - commerce_id
    - end_date
    - min_purchase
    - name
    - start_date
    type: object
  dto.CreateCommerceDTO:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dto.CreateUserReq:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  dto.RedeemReq:
    properties:
      award_id:
        type: integer
      branch_id:
        type: integer
      campaign_id:
        type: integer
      cash_back:
        type: integer
      commerce_id:
        type: integer
      is_points_redeem:
        type: boolean
      purchase_id:
        type: integer
      user_id:
        type: integer
    required:
    - branch_id
    - campaign_id
    - commerce_id
    - purchase_id
    - user_id
    type: object
  dto.RegisterPurchaseReq:
    properties:
      amount:
        type: number
      branch_id:
        type: integer
      campaign_id:
        type: integer
      commerce_id:
        type: integer
      redeem_points:
        type: boolean
      user_id:
        type: integer
    required:
    - amount
    - branch_id
    - campaign_id
    - commerce_id
    - redeem_points
    - user_id
    type: object
info:
  contact: {}
paths:
  /commerce/:
    post:
      consumes:
      - application/json
      description: Crea un comercio en el sistema utilizando la información proporcionada.
      parameters:
      - description: Información del comercio a crear
        in: body
        name: commerce
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCommerceDTO'
      produces:
      - application/json
      responses:
        "201":
          description: comercio creado exitosamente
          schema:
            $ref: '#/definitions/domain.Commerce'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Crear un nuevo comercio
      tags:
      - Commerce
  /commerce/branch:
    post:
      consumes:
      - application/json
      description: Crea una sucursal en el sistema utilizando la información proporcionada.
      parameters:
      - description: Información de la sucursal a crear
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBranchDTO'
      produces:
      - application/json
      responses:
        "201":
          description: sucursal creada exitosamente
          schema:
            $ref: '#/definitions/domain.Branch'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Crear una nueva sucursal
      tags:
      - Branch
  /commerce/branch/campaign/:id:
    get:
      consumes:
      - application/json
      description: obtener campañas de una sucursal en el sistema.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Campaign'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Obtener campañas de una sucursal
      tags:
      - Campaign
  /commerce/campaign:
    post:
      consumes:
      - application/json
      description: Crea una campaña en el sistema utilizando la información proporcionada.
      parameters:
      - description: Información de la campaña a crear
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCampaignDTO'
      produces:
      - application/json
      responses:
        "201":
          description: campaña creada exitosamente
          schema:
            $ref: '#/definitions/domain.Campaign'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Crear una nueva campaña
      tags:
      - Campaign
  /commerce/campaign/:id:
    get:
      consumes:
      - application/json
      description: obtener campañas de un comercio en el sistema.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Campaign'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Obtener campañas de un comercio
      tags:
      - Campaign
  /user/:
    post:
      consumes:
      - application/json
      description: Crea un usuario en el sistema utilizando la información proporcionada.
      parameters:
      - description: Información del usuario a crear
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserReq'
      produces:
      - application/json
      responses:
        "201":
          description: Usuario creado exitosamente
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Crear un nuevo usuario
      tags:
      - usuario
  /user/redeem:
    post:
      consumes:
      - application/json
      description: Registrar una redencion de puntos o cashback.
      parameters:
      - description: Información para redimir
        in: body
        name: redeem
        required: true
        schema:
          $ref: '#/definitions/dto.RedeemReq'
      produces:
      - application/json
      responses:
        "201":
          description: Compra registrada exitosamente
          schema:
            $ref: '#/definitions/domain.Redeem'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Registrar una redencion de puntos o cashback
      tags:
      - Redeem
  /user/register-purchase:
    post:
      consumes:
      - application/json
      description: Registra una nueva compra en el sistema utilizando la información
        proporcionada.
      parameters:
      - description: Información de la compra a registrada
        in: body
        name: purchase
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterPurchaseReq'
      produces:
      - application/json
      responses:
        "201":
          description: Compra registrada exitosamente
          schema:
            $ref: '#/definitions/domain.Purchase'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Registrar una nueva compra
      tags:
      - pruchase
swagger: "2.0"
